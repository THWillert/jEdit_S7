<?xml version="1.0" encoding="ISO-8859-1"?>
<menu name="S7">

<!-- S7.insert.xml V1.0, by Thorsten Willert
thorsten.willert [ at ] gmx.de
http://thorsten-willert.de
-->
	<menu name="Bitverknüpfung">
		<item name="U (UND)">U |</item>
		<item name="UN (UND-NICHT)">UN |</item>
		<item name="O (ODER)">O |</item>
		<item name="ON (ODER-NICHT)">ON |</item>
		<item name="X (EXCLUSIV-ODER)">X |</item>
		<item name="XN (EXCLUSIV-ODER-NICHT)">XN |</item>
		<item name="S (Setzen)">S |</item>
		<item name="R (Rücksetzen)">R |</item>
		<menu name="mit Anzeigebits">
			<item name="U (UND)" type="xinsert_script">{%Operand "Operand" "==0" "&gt;0" "&gt;0" "&lt;&gt;0" "&lt;=0" "&gt;=0" "UO" "OS" "BIE" "OV"}U {$=Operand}\n</item>
			<item name="UN (UND-NICHT)" type="xinsert_script">{%Operand "Operand" "==0" "&gt;0" "&gt;0" "&lt;&gt;0" "&lt;=0" "&gt;=0" "UO" "OS" "BIE" "OV"}UN {$=Operand}\n</item>
			<item name="O (ODER)" type="xinsert_script">{%Operand "Operand" "==0" "&gt;0" "&gt;0" "&lt;&gt;0" "&lt;=0" "&gt;=0" "UO" "OS" "BIE" "OV"}O {$=Operand}\n</item>
			<item name="ON (ODER-NICHT)" type="xinsert_script">{%Operand "Operand" "==0" "&gt;0" "&gt;0" "&lt;&gt;0" "&lt;=0" "&gt;=0" "UO" "OS" "BIE" "OV"}ON {$=Operand}\n</item>
			<item name="X (EXCLUSIV-ODER)" type="xinsert_script">{%Operand "Operand" "==0" "&gt;0" "&gt;0" "&lt;&gt;0" "&lt;=0" "&gt;=0" "UO" "OS" "BIE" "OV"}X {$=Operand}\n</item>
			<item name="XN (EXCLUSIV-ODER-NICHT)" type="xinsert_script">{%Operand "Operand" "==0" "&gt;0" "&gt;0" "&lt;&gt;0" "&lt;=0" "&gt;=0" "UO" "OS" "BIE" "OV"}XN {$=Operand}\n</item>
		</menu>
		<menu name="Flanken Operationen">
			<item name="FP (Steigende Flanke)">FP |</item>
			<item name="FN (Fallende Flanke)">FN |</item>
		</menu>
		<menu name="VKE Operationen">
			<item name="CLR (Setzt VKE auf 0)">CLR\n</item>
			<item name="SET (Setzt VKE auf 1)">SET\n</item>
			<item name="NOT (Negiert das VKE)">NOT\n</item>
			<item name="SAVE (Rettet das VKE in das BIE)">SAVE\n</item>
		</menu>
	</menu>
	<menu name="Vergleicher">
		<menu name="I (16 Bit Integer)">
			<item name="==I (Akku2-L=Akku1-L)">==I\n</item>
			<item name="&lt;&gt;I (Akku2-L&lt;&gt;Akku1-L)">&lt;&gt;I\n</item>
			<item name="&lt;I (Akku2-L&lt;Akku1-L)">&lt;I\n</item>
			<item name="&lt;=I (Akku2-L&lt;=Akku1-L)">&lt;=I\n</item>
			<item name="&gt;I (Akku2-L&gt;Akku1-L)">&gt;I\n</item>
			<item name="&gt;=I (Akku2-L=Akku1-L)">&gt;=I\n</item>
		</menu>
		<menu name="D (32 Bit Integer)">
			<item name="==D (Akku2-L=Akku1-L)">==D\n</item>
			<item name="&lt;&gt;D (Akku2-L&lt;&gt;Akku1-L)">&lt;&gt;D\n</item>
			<item name="&lt;D (Akku2-L&lt;Akku1-L)">&lt;D\n</item>
			<item name="&lt;=D (Akku2-L&lt;=Akku1-L)">&lt;=D\n</item>
			<item name="&gt;D (Akku2-L&gt;Akku1-L)">&gt;D\n</item>
			<item name="&gt;=D (Akku2-L=Akku1-L)">&gt;=D\n</item>
		</menu>
		<menu name="R (32 Bit)">
			<item name="==R (Akku2-L=Akku1-L)">==R\n</item>
			<item name="&lt;&gt;R (Akku2-L&lt;&gt;Akku1-L)">&lt;&gt;R\n</item>
			<item name="&lt;R (Akku2-L&lt;Akku1-L)">&lt;R\n</item>
			<item name="&lt;=R (Akku2-L&lt;=Akku1-L)">&lt;=R\n</item>
			<item name="&gt;R (Akku2-L&gt;Akku1-L)">&gt;R\n</item>
			<item name="&gt;=R (Akku2-L=Akku1-L)">&gt;=R\n</item>
		</menu>
	</menu>

	<menu name="Umwandler">
		<item name="BTI (BCD To Integer)">BTI\n</item>
		<item name="BTD (BCD To Doubleinteger)">BTD\n</item>
		<item name="DTR (Doubleinteger To Real)">DTR\n</item>
		<item name="ITD (Integer To Doubleinteger)">ITD\n</item>
		<item name="ITB (Integer To BCD +-999)">ITB\n</item>
		<item name="DTB (Doubleinteger to BCD +- 9999999)">DTB\n</item>
		<item name="RND (Real nach 32-Bit-Integer)">RND\n</item>
		<item name="RND- (Real nach 32-Bit-Integer, gerundet)">RND-\n</item>
		<item name="RND+ (Real nach 32-Bit-Integer, gerundet)">RND+\n</item>
		<item name="TRUNC (Real nach 32-Bit-Integer, ohne Nachkomma)">TRUNC\n</item>
	</menu>

	<menu name="Zähler">
		<item name="ZV (Zähle vorwärts)">ZV |</item>
		<item name="RV (Zähle rückwärts)">ZR |</item>
		<item name="FR (Freigabe)">FR |</item>
		<item name="S (Setzen)">FR |</item>
		<item name="R (RÃ¼cksetzen)">R |</item>
	</menu>

	<menu name="DBs">
		<item name="AUF (Aufschlagen eines (Instanz-)Datenbausteins)">AUF |</item>
		<item name="TDB (Tausche Datenbausteine)">TDB\n</item>
		<item name="L DBNO (Lade Nummer des DBs)">L DBNO\n</item>
		<item name="L DINO (Lade Nummer des Instanz-DBs)">L DINO\n</item>
		<item name="L DBLG (Lade Länge des DBs)">L DBLG\n</item>
		<item name="L DILG (Lade Länge des Instanz-DBs)">L DILG\n</item>
	</menu>

	<menu name="Sprünge">
		<item name="SPA (Springe absolut)">SPA |</item>
		<item name="SPB (Springe bedingt bei VKE=1)">SPB |</item>
		<item name="SPBN (Springe bedingt bei VKE=0)">SPBN |</item>
		<item name="SPBB (Springe bedingt bei VKE=1, VKE nach BIE)">SPBB |</item>
		<item name="SPBNB (Springe bedingt bei VKE=0, VKE nach BIE)">SPBNB |</item>
		<item name="SPBI (Springe bedingt bei BIE=1)">SPBI |</item>
		<item name="SPBIN (Springe bedingt bei BIE=0)">SPBIN |</item>
		<item name="SPBB (Springe bedingt bei VKE=1, VKE nach BIE)">SPBB |</item>
		<item name="SPO (Springe bedingt bei OV=1 speichernd)">SPO |</item>
		<item name="SPS (Springe bedingt bei OS=1 speichernd)">SPS |</item>
		<item name="SPU (Springe bei A1=1 und A0=1)">SPU |</item>
		<item name="SPZ (Springe bei Ergebnis=0, A1=0 und A0=0)">SPZ |</item>
		<item name="SPP (Springe bei Ergebnis&gt;0, A1=1 und A0=0)">SPP |</item>
		<item name="SPM (Springe bei Ergebnis&lt;0, A1=0 und A0=1)">SPM |</item>
		<item name="SPN (Springe bei Ergebnis&lt;&gt;0, A1=1 u. A0=0 o. A1=0 u. A0=1)">SPN |</item>
		<item name="SPMZ (Springe bei Ergebnis&lt;=0, A1=0 u. A0=1 o. A1=0 u. A0=0)">SPMZ |</item>
		<item name="SPPZ (Springe bei Ergebnis&gt;=0, A1=1 u. A0=0 o. A1=0 u. A0=0)">SPPZ |</item>
		<item name="SPL (Sprungverteiler)">SPL |</item>
		<item name="LOOP (Dekrementiere Akku1-L und springe bei Akku1-L&lt;&gt;0)">LOOP |</item>
	</menu>

	<menu name="Arithmetische Operationen">
		<menu name="Festpunktarithmetik (16 Bit)">
			<item name="+I (Akku1-L=Akku1-L+Akku2-L)">+I\n</item>
			<item name="-I (Akku1-L=Akku2-L-Akku1-L)">-I\n</item>
			<item name="*I (Akku1=Akku2-L*Akku1-L)">*I\n</item>
			<item name="/I (Akku1-L=Akku2-L/Akku1-L ; Akku2-H=Rest)">/I\n</item>
		</menu>
		<menu name="Festpunktarithmetik (32 Bit)">
			<item name="+D (Akku1=Akku2+Akku1)">+D\n</item>
			<item name="-D (Akku1=Akku2-Akku1)">-D\n</item>
			<item name="*D (Akku1=Akku2*Akku1)">*D\n</item>
			<item name="/D (Akku1=Akku2/Akku1)">/D\n</item>
			<item name="MOD (Akku1=Rest von Akku2/Akku1)">MOD\n</item>
		</menu>
		<menu name="Gleitpunktarithmetik (32 Bit)">
			<item name="+R (Akku1=Akku2+Akku1)">+R\n</item>
			<item name="-R (Akku1=Akku2-Akku1)">-R\n</item>
			<item name="*R (Akku1=Akku2*Akku1)">*R\n</item>
			<item name="/R (Akku1=Akku2/Akku1)">/R\n</item>
			<item name="NEGR (Negiere Akku1)">NEGR\n</item>
			<item name="ABS (Betrag von Akku1)">ABS\n</item>
			<item name="SQRT (Quadratwurzel von Akku1)">SQRT\n</item>
			<item name="SQR (Quadriere Akku1)">SQR\n</item>
			<item name="LN (Nat. Logarithmus von Akku1)">LN\n</item>
			<item name="EXP (Exponentialwert Akku1)">EXP\n</item>
			<item name="SIN (Sinus)">SIN\n</item>
			<item name="ASIN (Arcussinus)">ASIN\n</item>
			<item name="COS (Cosinus)">COS\n</item>
			<item name="ACOS (Arcuscosinus)">ACOS\n</item>
			<item name="TAN (Tangens)">TAN\n</item>
			<item name="ATAN (Arcustangens)">ATAN\n</item>
		</menu>
		<menu name="Adressregister">
			<item name="+AR1">+AR1</item>
			<item name="+AR2">+AR2</item>
		</menu>
		<menu name="Komplementbildung">
			<item name="INVI (1er-Komplement Akku1-L)">INVI\n</item>
			<item name="INVD (1er-Komplement Akku1)">INVD\n</item>
			<item name="NEGI (2er-Komplement Akku1-L)">NEGI\n</item>
			<item name="NEGD (2er-Komplement Akku1)">NEGD\n</item>
		</menu>
	</menu>

	<menu name="Laden/Transferieren">
		<item name="L (Lade)">L |</item>
		<item name="LC (Lade BCD-Codiert)">LC |</item>
		<item name="T (Transfer)">T |</item>
		<menu name="Adressregister">
			<item name="LAR1 (Lade Adressregister 1)">LAR1\n</item>
			<item name="LAR2 (Lade Adressregister 2)">LAR2\n</item>
			<item name="TAR (Tausche Adressregister 1 und 2)">TAR\n</item>
			<item name="TAR1 (Lade Adressregister 1 in Akku)">TAR1\n</item>
			<item name="TAR2 (Lade Adressregister 2 in Akku)">TAR2\n</item>
		</menu>
		<menu name="Statuswort">
			<item name="L STW (Lade Statuswort Akku 1)">L STW\n</item>
			<item name="T STW (Transferiere Akku 1 in Statuswort)">T STW\n</item>
		</menu>
		<menu name="Datenbaustein">
			<item name="L DBNO (Lade Nummer des DBs)">L DBNO\n</item>
			<item name="L DINO (Lade Nummer des Instanz-DBs)">L DINO\n</item>
			<item name="L DBLG (Lade LÃ¤nge des DBs)">L DBLG\n</item>
			<item name="L DILG (Lade LÃ¤nge des Instanz-DBs)">L DILG\n</item>
		</menu>
	</menu>

	<menu name="Programmsteuerung">
		<item name="CALL (Unbedingter Aufruf mit ParameterÃ¼bergabe)">CALL |</item>
		<item name="CALL FC (FC Aufruf)">CALL FC | (\n)</item>
		<item name="CALL FB (FB Aufruf)">CALL FB | (\n)</item>
		<item name="CALL FB (FB Aufruf + Instanz-DB)">CALL FC |, DB  (\n)</item>
		<item name="UC (Unbedingter Aufruf ohne ParameterÃ¼bergabe)">UC |</item>
		<item name="CC (Bedingter Aufruf ohne ParameterÃ¼bergabe)">CC |</item>
		<item name="AUF (Aufschlagen eines (Instanz-)Datenbausteins)">AUF |</item>
		<item name="BE (Beende Baustein)">BE\n</item>
		<item name="BEA (Beende Baustein absolut)">BEA\n</item>
		<item name="BED (Beende Baustein bedingt)">BEB\n</item>
		<item name="TDB (Tausche Datenbausteine)">TDB\n</item>
		<menu name="MCR">
			<item name="MCR( (Ã–ffnen einer MCR-Zone)">MCR(\n</item>
			<item name=")MCR (SchlieÃŸen einer MCR-Zone)">)MCR\n</item>
			<item name="MCRA (Aktiviere MCR)">)MCRA\n</item>
			<item name="MCRD (Deaktiviere MCR)">)MCRD\n</item>
		</menu>
	</menu>

	<menu name="Schiebeoperationen">
			<item name="SLW (Schiebe Akku1-L n. links)">SLW |</item>
			<item name="SLD (Schiebe Akku1 n. links)">SLD |</item>
			<item name="SRW (Schiebe Akku1-L n. rechts)">SRW |</item>
			<item name="SRD (Schiebe Akku1 n. rechts)">SRD |</item>
			<item name="SSI (Schiebe Akku1-L n. rechts)">SSI |</item>
			<item name="SSD (Schiebe Akku1 n. rechts)">SSD |</item>
	</menu>

	<menu name="Rotieroperationen">
			<item name="RLD (Rotiere Akku1 n. links)">RLD |</item>
			<item name="RRD (Rotiere Akku1 n. rechts)">RRD |</item>
			<item name="RLDA (Rotiere Akku1-L n. links Ã¼ber A1)">RLDA</item>
			<item name="RRDA (Rotiere Akku1-L n. rechts Ã¼ber A1)">RRDA</item>
	</menu>

	<menu name="Zeiten">
		<item name="SI (Impuls)">SI |</item>
		<item name="SV (VerlÃ¤ngerter Impuls)">SV |</item>
		<item name="SE (EinschaltverzÃ¶gerter Impuls)">SE |</item>
		<item name="SS (Speichernde EinschaltverzÃ¶gerung)">SI |</item>
		<item name="SA (AusschaltverzÃ¶gerung)">SA |</item>
		<item name="FR (Freigabe)">FR |</item>
		<item name="R (RÃ¼cksetzen)">R |</item>
	</menu>

	<menu name="Wortverknüpfungen">
		<item name="UW (UND Wort)">U |</item>
		<item name="OW (ODER Wort)">UN |</item>
		<item name="XOW (EXCLUSIV-ODER Wort)">O |</item>
		<item name="UD (UND Doppelwort)">ON |</item>
		<item name="OD (ODER Doppelwort)">X |</item>
		<item name="XOD (EXCLUSIV-ODER Doppelwort)">XN |</item>
	</menu>

	<menu name="Akkumulator-Operationen">
			<item name="TAW (Umkehr der Reihenfolge der Bytes in Akku1-L)">TAW\n</item>
			<item name="TAD (Umkehr der Reihenfolge der Bytes in Akku1)">TAD\n</item>
			<item name="TAK (Tauscht Akku1 und 2)">TAK\n</item>
			<item name="PUSH (Akku1 nach Akku2)">PUSH\n</item>
			<item name="POP (Akku2 nach Akku1)">POP\n</item>
			<item name="INC 0...255 (Incrementiere Akku1-LL)">INC |</item>
			<item name="DEC 0...255 (Decrementiere Akku1-LL)">DEC |</item>
	</menu>

	<menu name="Operanden">
		<menu name="Byte">
			<item name="EB (Eingangsbyte)">EB |</item>
			<item name="PEB (Perepherie Eingangsbyte)">PEB |</item>
			<item name="AB (Ausgangsbyte)">AB |</item>
			<item name="PAB (Perepherie Ausgangsbyte)">PAB |</item>
			<item name="MB (Merkerbyte)">MB |</item>
			<item name="LB (Lokaldatenbyte)">LB |</item>
			<item name="DBB (Datenbyte)">DBB |</item>
			<item name="DIB (Instanz-Datenbyte)">DIB |</item>
			<item name="g[AR1,m] (registerind. bereichsintern)">g[AR1,|]</item>
			<item name="g[AR2,m] (registerind. bereichsintern)">g[AR2,|]</item>
			<item name="B[AR1,m] (bereichsübergreifend)">B[AR1,|]</item>
			<item name="B[AR2,m] (bereichsübergreifend)">B[AR2,|]</item>
		</menu>

		<menu name="Wort">
			<item name="EW (Eingangswort)">EW |</item>
			<item name="PEW (Perepherie Eingangswort)">PEW |</item>
			<item name="AW (Ausgangswort)">AW |</item>
			<item name="PAW (Perepherie Ausgangsbyte)">PAW |</item>
			<item name="MW (Merkerwort)">MW |</item>
			<item name="LW (Lokaldatenwort)">LW |</item>
			<item name="DBW (Datenwort)">DBW |</item>
			<item name="DIW (Instanz-Datenwort)">DIW |</item>
			<item name="h[AR1,m] (registerind. bereichsintern)">h[AR1,|]</item>
			<item name="h[AR2,m] (registerind. bereichsintern)">h[AR2,|]</item>
			<item name="W[AR1,m] (bereichsübergreifend)">W[AR1,|]</item>
			<item name="W[AR2,m] (bereichsübergreifend)">W[AR2,|]</item>
		</menu>

		<menu name="Doppelwort">
			<item name="ED (Eingangsdoppelwort)">ED |</item>
			<item name="PED (Perepherie Eingangsdoppelwort)">PED |</item>
			<item name="AD (Ausgangsdoppelwort)">AD |</item>
			<item name="PAD (Perepherie Ausgangsdoppelwort)">PAD |</item>
			<item name="MD (Merkerdoppelwort)">MD |</item>
			<item name="LD (Lokaldatendoppelwort)">LD |</item>
			<item name="DBD (Datendoppelwort)">DBD |</item>
			<item name="DID (Instanz-Datendoppelwort)">DID |</item>
			<item name="i[AR1,m] (registerind. bereichsintern)">i[AR1,|]</item>
			<item name="i[AR2,m] (registerind. bereichsintern)">i[AR2,|]</item>
			<item name="D[AR1,m] (bereichsübergreifend)">D[AR1,|]</item>
			<item name="D[AR2,m] (bereichsübergreifend)">D[AR2,|]</item>
		</menu>

		<menu name="Konstanten">
			<item name="2# (16/32-Bit-BinÃ¤r)">2#|</item>
			<item name="B#8# (8-Bit-Hexadezimal)">B#8#|</item>
			<item name="W#16# (16-Bit-Hexadezimal)">W#16#|</item>
			<item name="DW#16# (32-Bit-Hexadezimal)">DW#16#|</item>
			<item name="D# (IEC-Datum)">D#|</item>
			<item name="S5T# (S7-Zeit)">S5T#|</item>
			<item name="TOD# (32-Bit-IEC-Tageszeit)">TOD#|</item>
			<item name="C# (16-Bit-Zählerkonstante)">C#|</item>
			<item name="P# (Bitpointer)">P#|</item>
			<item name="L# (32-Bit-Ganzzahk)">L#|</item>
		</menu>

		<item name="AR1 (Adressregister 1)">AR1</item>
		<item name="AR2 (Adressregister 2)">AR2</item>
	</menu>

	<menu name="Programmstruktur">
		<item name="Netzwerk" type="xinsert_script">{%title "TITLE:"}NETWORK\nTITLE\t= {$=title}\n</item>
		<menu name="Bausteine">
			<item name="OB" type="xinsert_script">{%titel "TITLE:"}ORGANIZATION_BLOCK OB
TITLE	= {$=titel}
KNOW_HOW_PROTECTED
AUTHOR	:
FAMILY	:
NAME	:
VERSION	:

VAR_INPUT

END_VAR

VAR_OUTPUT

END_VAR

VAR_IN_OUT

END_VAR

VAR

END_VAR

VAR_TEMP

END_VAR

BEGIN

NETWORK
TITLE =

END_ORGANIZATION_BLOCK</item>
			<item name="FB" type="xinsert_script">{%titel "TITLE:"}FUNCTION_BLOCK FB
TITLE = {$=titel}
KNOW_HOW_PROTECTED
AUTHOR	:
FAMILY	:
NAME	:
VERSION	:

VAR_INPUT

END_VAR

VAR_OUTPUT

END_VAR

VAR_IN_OUT

END_VAR

VAR

END_VAR

VAR_TEMP

END_VAR

BEGIN

NETWORK
TITLE =

END_FUNCTION_BLOCK</item>
			<item name="FC" type="xinsert_script">{%titel "TITLE:"}FUNCTION FC 0 : VOID
TITLE = {$=titel}
KNOW_HOW_PROTECTED
AUTHOR	:
FAMILY	:
NAME	:
VERSION	:

VAR_INPUT

END_VAR

VAR_OUTPUT

END_VAR

VAR_IN_OUT

END_VAR

VAR

END_VAR

VAR_TEMP

END_VAR

BEGIN

NETWORK
TITLE =

END_FUNCTION</item>
			<item name="DB" type="xinsert_script">{%titel "TITLE:"}DATA_BLOCK DB
TITLE =	{$=titel}
KNOW_HOW_PROTECTED
AUTHOR	:
FAMILY	:
NAME	:
VERSION	:
UNLINKED
READ_ONLY

BEGIN

END_DATA_BLOCK</item>
		</menu>
		<menu name="Variablendeklaration">
			<item name="Eingangsparameter">VAR_INPUT\n\t\nEND_VAR</item>
			<item name="Ausgangsparameter">VAR_OUTPUT\n\t\nEND_VAR</item>
			<item name="Durchgangsparameter">VAR_IN_OUT\n\t\nEND_VAR</item>
			<item name="Statische Variablen">VAR\n\t\nEND_VAR</item>
			<item name="Temporäre Variablen">VAR_TEMP\n\t\nEND_VAR</item>
			<item name="UDT">TYPE UDT |
STRUCT

END_STRUCT;
END_TYPE</item>
			<item name="STRUCT">STRUCT\n\t\nEND_STRUCT;\n</item>
		</menu>
	</menu>
</menu>
